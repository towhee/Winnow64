https://symbl.cc/en/
https://home.unicode.org/
https://www.w3.org/TR/xml-entity-names/025.html  = geometric shapes
🔎🔍
📁📂📗🕎📷🎨👍
📈📌🔈📎🔗🔑🧾🛈
🚫❓❌ 🇨🇦 🪰 🦬🐎🪰🪳🦟🪲🦥🦞🦤🐻‍❄️🦩🪱🦨
🦦🦫🐫🐪🦎🦋🕷️🐌🦭🦧🦣
⚡🌈🌆🌸🍁🍄🎁🎹💥💭🏃🏸💻🔆🔴🔵🔶🔷🔸🔹🔺🔻🖐🧲🛑⛬🎞🚫
•
🔒  Lock used in thumbnails
●   Black Circle used in thumbnailHelp
⚫   Black Large Circle
▭   White rectangle
▢   White square with rounded corners
□   White square
⬜  White large square
⊡⛶🔲▢⬜⬛⌗🄰
🌑
→
☞

CONVERT SVG TO PIXMAP AND PUT ON QLABLE
#include <QLabel>
#include <QSvgRenderer>
#include <QPixmap>
#include <QPainter>

void renderSvgToLabel(QLabel *label, const QString &svgContent) {
    QSvgRenderer renderer(svgContent.toUtf8());
    QPixmap pixmap(label->size());
    pixmap.fill(Qt::transparent); // Transparent background
    QPainter painter(&pixmap);
    renderer.render(&painter);
    label->setPixmap(pixmap);
}

// Usage
QLabel *label = new QLabel(this);
label->setFixedSize(50, 50); // Set desired size
renderSvgToLabel(label, sWrench);


QFont glyphs;
int id = QFontDatabase::addApplicationFont("/Users/roryhill/Downloads/glyphs.ttf");
if (id != -1) {
    QString family = QFontDatabase::applicationFontFamilies(id).at(0);
    glyphs = QFont(family);
    statusLabel->setFont(glyphs);
} else {
    qDebug() << "Failed to load font.";
}

statusLabel->setText("C");  // filter symbol
// updateStatus();
return;



// Load the custom font
QString fontPath = "/Users/roryhill/Downloads/glyphter-font/fonts/glyphs.ttf";
int fontId = QFontDatabase::addApplicationFont(fontPath);

if (fontId == -1) {
    qDebug() << "Failed to load the font from:" << fontPath;
    return;
}

// Get the family name of the loaded font
QStringList fontFamilies = QFontDatabase::applicationFontFamilies(fontId);
if (fontFamilies.isEmpty()) {
    qDebug() << "No font families found in the loaded font.";
    return;
}
QString fontFamily = fontFamilies.at(0);

qDebug() << "Font loaded successfully with family name:" << fontFamily;

// Create a QFont using the loaded font family
QFont customFont(fontFamily);

// Insert the glyph into a QString
// Assuming 'A' is the character you want from the font
QChar glyph('A'); // Replace with the Unicode value if it's not a standard character
QString s = QString(glyph);

// Set the custom font in your application or a widget
// For example:
// QLabel *label = new QLabel;
// label->setFont(customFont);
// label->setText(s);

qDebug() << "Generated string with glyph:" << s << "A";

statusLabel->setFont(customFont);
statusLabel->setText(s);
