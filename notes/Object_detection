YOLOv8 Procedure

â€¢ Prepare dataset
    - Select images with object of interest
    - Crop and resize to square 1080 px
    - Import into Roboflow project
    - Annotate
    - Add to dataset

â€¢ Format dataset for YOLOv8
    - Generate a version (add augmentation optional)
    - Export version for YOLOv8

â€¢ Train dataset locally (did not work)
    - Github: https://github.com/ultralytics/ultralytics
    - Tutorial 32:15: https://www.youtube.com/watch?v=m9fH9OWn8YM
    - VisualStudio Code terminal
        - pip install ultralytics
    - Run python script from Github YOLOv8 34:50
        - Create config.yaml (data.yaml?) 35:35
            - add absolute path

â€¢ Train dataset using google colab
    - Install google drive Colab Notebooks
        - Go to https://colab.research.google.com/ and select "New notebook" (or existing)
          I think google drive must also be open - notebook will appear)
    - Tutorial 43:00 https://www.youtube.com/watch?v=m9fH9OWn8YM
    - Mount google drive https://stackoverflow.com/questions/48376580/google-colab-how-to-read-data-from-my-google-drive
    - Run python code:
          from ultralytics import YOLO
          # Load a model
          model = YOLO("yolov8n.yaml")  # build a new model from scratch
          # Use the model
          model.train(data="/content/content/MyDrive/WildEyesDataset/data.yaml", epochs=1)  # train the model
          metrics = model.val()  # evaluate model performance on the validation set
          results = model("https://ultralytics.com/images/bus.jpg")  # predict on an image
          success = model.export(format="onnx")  # export the model to ONNX format

from ultralytics import YOLO

# Load a model
model = YOLO("yolov8n.yaml")  # build a new model from scratch

# Use the model
model.train(data="/content/content/MyDrive/WildEyesDataset/data.yaml", epochs=1)  # train the model
# metrics = model.val()  # evaluate model performance on the validation set
# results = model("https://ultralytics.com/images/bus.jpg")  # predict on an image
# success = model.export(format="onnx")  # export the model to ONNX format

First run:
from  n    params  module                                       arguments
0                  -1  1       464  ultralytics.nn.modules.Conv                  [3, 16, 3, 2]
1                  -1  1      4672  ultralytics.nn.modules.Conv                  [16, 32, 3, 2]
2                  -1  1      7360  ultralytics.nn.modules.C2f                   [32, 32, 1, True]
3                  -1  1     18560  ultralytics.nn.modules.Conv                  [32, 64, 3, 2]
4                  -1  2     49664  ultralytics.nn.modules.C2f                   [64, 64, 2, True]
5                  -1  1     73984  ultralytics.nn.modules.Conv                  [64, 128, 3, 2]
6                  -1  2    197632  ultralytics.nn.modules.C2f                   [128, 128, 2, True]
7                  -1  1    295424  ultralytics.nn.modules.Conv                  [128, 256, 3, 2]
8                  -1  1    460288  ultralytics.nn.modules.C2f                   [256, 256, 1, True]
9                  -1  1    164608  ultralytics.nn.modules.SPPF                  [256, 256, 5]
10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']
11             [-1, 6]  1         0  ultralytics.nn.modules.Concat                [1]
12                  -1  1    148224  ultralytics.nn.modules.C2f                   [384, 128, 1]
13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']
14             [-1, 4]  1         0  ultralytics.nn.modules.Concat                [1]
15                  -1  1     37248  ultralytics.nn.modules.C2f                   [192, 64, 1]
16                  -1  1     36992  ultralytics.nn.modules.Conv                  [64, 64, 3, 2]
17            [-1, 12]  1         0  ultralytics.nn.modules.Concat                [1]
18                  -1  1    123648  ultralytics.nn.modules.C2f                   [192, 128, 1]
19                  -1  1    147712  ultralytics.nn.modules.Conv                  [128, 128, 3, 2]
20             [-1, 9]  1         0  ultralytics.nn.modules.Concat                [1]
21                  -1  1    493056  ultralytics.nn.modules.C2f                   [384, 256, 1]
22        [15, 18, 21]  1    897664  ultralytics.nn.modules.Detect                [80, [64, 128, 256]]
YOLOv8n summary: 225 layers, 3157200 parameters, 3157184 gradients, 8.9 GFLOPs

Ultralytics YOLOv8.0.90 ðŸš€ Python-3.10.11 torch-2.0.0+cu118 CPU
yolo/engine/trainer: task=detect, mode=train, model=yolov8n.yaml, data=/content/content/MyDrive/WildEyesDataset/data.yaml, epochs=1, patience=50, batch=16, imgsz=640, save=True, save_period=-1, cache=False, device=None, workers=8, project=None, name=None, exist_ok=False, pretrained=False, optimizer=SGD, verbose=True, seed=0, deterministic=True, single_cls=False, rect=False, cos_lr=False, close_mosaic=0, resume=False, amp=True, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, show=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, vid_stride=1, line_thickness=3, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, boxes=True, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0, cfg=None, v5loader=False, tracker=botsort.yaml, save_dir=runs/detect/train
Downloading https://ultralytics.com/assets/Arial.ttf to /root/.config/Ultralytics/Arial.ttf...
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 755k/755k [00:00<00:00, 17.0MB/s]
Overriding model.yaml nc=80 with nc=4

from  n    params  module                                       arguments
0                  -1  1       464  ultralytics.nn.modules.Conv                  [3, 16, 3, 2]
1                  -1  1      4672  ultralytics.nn.modules.Conv                  [16, 32, 3, 2]
2                  -1  1      7360  ultralytics.nn.modules.C2f                   [32, 32, 1, True]
3                  -1  1     18560  ultralytics.nn.modules.Conv                  [32, 64, 3, 2]
4                  -1  2     49664  ultralytics.nn.modules.C2f                   [64, 64, 2, True]
5                  -1  1     73984  ultralytics.nn.modules.Conv                  [64, 128, 3, 2]
6                  -1  2    197632  ultralytics.nn.modules.C2f                   [128, 128, 2, True]
7                  -1  1    295424  ultralytics.nn.modules.Conv                  [128, 256, 3, 2]
8                  -1  1    460288  ultralytics.nn.modules.C2f                   [256, 256, 1, True]
9                  -1  1    164608  ultralytics.nn.modules.SPPF                  [256, 256, 5]
10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']
11             [-1, 6]  1         0  ultralytics.nn.modules.Concat                [1]
12                  -1  1    148224  ultralytics.nn.modules.C2f                   [384, 128, 1]
13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']
14             [-1, 4]  1         0  ultralytics.nn.modules.Concat                [1]
15                  -1  1     37248  ultralytics.nn.modules.C2f                   [192, 64, 1]
16                  -1  1     36992  ultralytics.nn.modules.Conv                  [64, 64, 3, 2]
17            [-1, 12]  1         0  ultralytics.nn.modules.Concat                [1]
18                  -1  1    123648  ultralytics.nn.modules.C2f                   [192, 128, 1]
19                  -1  1    147712  ultralytics.nn.modules.Conv                  [128, 128, 3, 2]
20             [-1, 9]  1         0  ultralytics.nn.modules.Concat                [1]
21                  -1  1    493056  ultralytics.nn.modules.C2f                   [384, 256, 1]
22        [15, 18, 21]  1    752092  ultralytics.nn.modules.Detect                [4, [64, 128, 256]]
YOLOv8n summary: 225 layers, 3011628 parameters, 3011612 gradients, 8.2 GFLOPs

TensorBoard: Start with 'tensorboard --logdir runs/detect/train', view at http://localhost:6006/
optimizer: SGD(lr=0.01) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias
train: Scanning /content/content/MyDrive/WildEyesDataset/train/labels... 513 images, 3 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 513/513 [01:57<00:00,  4.35it/s]
train: New cache created: /content/content/MyDrive/WildEyesDataset/train/labels.cache
albumentations: Blur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))
val: Scanning /content/content/MyDrive/WildEyesDataset/valid/labels... 146 images, 2 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 146/146 [01:04<00:00,  2.27it/s]
val: New cache created: /content/content/MyDrive/WildEyesDataset/valid/labels.cache
Plotting labels to runs/detect/train/labels.jpg...
Image sizes 640 train, 640 val
Using 0 dataloader workers
Logging results to runs/detect/train
Starting training for 1 epochs...

Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size
1/1         0G      4.424      7.204      3.996          2        640: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 33/33 [07:30<00:00, 13.66s/it]
Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 5/5 [00:44<00:00,  8.95s/it]
all        146        218          0          0          0          0

1 epochs completed in 0.138 hours.
Optimizer stripped from runs/detect/train/weights/last.pt, 6.2MB
Optimizer stripped from runs/detect/train/weights/best.pt, 6.2MB

Validating runs/detect/train/weights/best.pt...
Ultralytics YOLOv8.0.90 ðŸš€ Python-3.10.11 torch-2.0.0+cu118 CPU
YOLOv8n summary (fused): 168 layers, 3006428 parameters, 0 gradients, 8.1 GFLOPs
Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 5/5 [00:41<00:00,  8.23s/it]
all        146        218          0          0          0          0
Speed: 2.8ms preprocess, 248.8ms inference, 0.0ms loss, 1.6ms postprocess per image
Results saved to runs/detect/train
