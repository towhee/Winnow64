#include <QApplication>
#include <QFileSystemModel>
#include <QTreeView>
#include <QStorageInfo>
#include <QTimer>

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);

    QFileSystemModel model;
    model.setRootPath(QDir::rootPath()); // Set the root path to the root directory of the file system
    model.setFilter(QDir::NoDotAndDotDot | QDir::AllDirs | QDir::Drives); // Set the filter to show only drives and directories

    QTreeView treeView;
    treeView.setModel(&model);
    treeView.setRootIndex(model.index(model.rootPath())); // Set the root index to the root path of the model
    treeView.show();

    QTimer timer;
    QObject::connect(&timer, &QTimer::timeout, & {
        QStringList drives;
        for (const QStorageInfo &storage : QStorageInfo::mountedVolumes()) {
            if (storage.isReady() && storage.isRemovable()) {
                drives << storage.rootPath();
            }
        }
        model.setNameFilters(drives);
        model.setRootPath("");
        treeView.setRootIndex(model.index(model.rootPath()));
    });
    timer.start(1000); // Update the model every second

    return app.exec();
}
