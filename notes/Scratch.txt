Winnow uses the DockWidget favDock to dock the bookmarks (QTreeWidget).  A double mouse click toggles
the dock between docked and float state.  I want this to only occur when the double mouse click is
in the dock title bar, not when it is propogated from bookmarks. Currently, a double mouse click in
bookmarks is triggering the toggle between docked and floating.

void MW::createFavDock()
{
    if (G::isLogger) G::log("MW::createFavDock");
    favDockTabText = "Bookmarks";
    // favDockTabText = "  🔖  ";
    dockTextNames << favDockTabText;
    favDock = new DockWidget(favDockTabText, "BookmarkDock", this);  // Bookmarks📗 🔖 🏷️ 🗂️
    // favDock->setObjectName("Bookmarks");
    favDock->setWidget(bookmarks);
    connect(favDock, &DockWidget::focus, this, &MW::focusOnDock);

    // customize the favDock titlebar
    QHBoxLayout *favTitleLayout = new QHBoxLayout();
    favTitleLayout->setContentsMargins(0, 0, 0, 0);
    favTitleLayout->setSpacing(0);
    favTitleBar = new DockTitleBar("Bookmarks", favTitleLayout);
    favDock->setTitleBarWidget(favTitleBar);
}

DockTitleBar::DockTitleBar(const QString &title, QHBoxLayout *titleBarLayout) : QWidget()
{
    setStyle();
    setLayout(titleBarLayout);
    titleLabel = new QLabel;
    titleLabel->setTextFormat(Qt::RichText);
    setTitle(title);
    titleLabel->setText(title);
    titleLabel->setStyleSheet("border:none;");
    titleBarLayout->addWidget(titleLabel);
    titleBarLayout->addStretch();
}

void DockTitleBar::mouseDoubleClickEvent(QMouseEvent *event)
{
    QWidget::mouseDoubleClickEvent(event);
}

DockWidget::DockWidget(const QString &title, QString objName, QWidget *parent)
: QDockWidget(title, parent)
{
setObjectName(objName);
isRestoring = false;
}

bool DockWidget::hasCustomTitleBar()
{
QWidget *titleBarWidget = this->titleBarWidget();
if (titleBarWidget) return true;
else return false;
}

bool DockWidget::event(QEvent *event)
{
/*
QDockWidget title bar overrides MouseButtonDblClick and does not propogate the event
so it cannot be captured in DockWidget.  Instead capture here.

The QDockWidget topLevelChanged signal is not employed because it fires after the
DockWidget floating status has changed, and we need to know before, so we can save
the floating geometry.
*/
if (event->type() == QEvent::NonClientAreaMouseButtonDblClick) {

    /* This event is fired when the default (non-custom) floating DockWidget titlebar
    is dblclick. If the DockWidget has a custom titlebar then this event is not
    fired. So, only the thumbDock DockWidget when floating. */

    if (G::isLogger) G::log("DockWidget::event", "QEvent::NonClientAreaMouseButtonDblClick " + objectName());
    qDebug() << "DockWidget::event NonClientAreaMouseButtonDblClick" << objectName()
             << "isFloating =" << isFloating();
    save();
    setFloating(false);
    emit focus(this);
    // do not propogate event
    return true;
}

if (event->type() == QEvent::MouseButtonDblClick) {
    /*  This event is fired for DockWidgets with a custom titlebar when they are both
    floating and docked and non-custom titlebar DockWidgets when docked. */
    if (G::isLogger) G::log("DockWidget::event", "QEvent::MouseButtonDblClick " + objectName());
    qDebug() << "DockWidget::event MouseButtonDblClick" << objectName()
             << "isFloating =" << isFloating();
    if (isFloating() && hasCustomTitleBar()) {
        save();
        setFloating(false);
        emit focus(this);
    }
    else {
        doubleClickDocked = true;
        setDefaultFloatingGeometry();
        setFloating(true);  // must preceed calling restore()
        restore();
    }
    // do not propogate event
    return true;
}

QDockWidget::event(event);
return true;
}

void BookMarks::mouseDoubleClickEvent(QMouseEvent *event)
{
    event->ignore();
    return;
}
