CACHING STRATEGY
- get visible range: thumbnails (icons) based on 16:9 aspect
- launch MetaRead
- read metadata for all image files, starting with visible range*, sf range and dm range
- when visible metadata read:
    - calc best fit, tweak visible range, iterate to finalize visible range
    - launch ReadIcon
- read icons for visible range*, visible + range, visible - range, rest to limit
- when visible icons read, launch ImageCache

NEW CLASSES
- MetaRead
- MetaReader
- IconLoad
- IconLoader

Metadata reading in class metaread (replace mdcache) - new thread

QVector<bool> dmRowRead;  // match rows in datamodel

Like the image decoders, create n MetaReader:
// create n MetaReader threads
QVector<ReaderDecoder*> reader;     // all the decoders in header
readerCount = QThread::idealThreadCount();
for (int id = 0; id < readerCount; ++id) {
    MetaReader *r = new MetaReader(this, id, dm, metadata);
    readers.append(r);
    connect(decoder[id], &MetaReader::done, this, &MetaCache::fillCache);
}

MetaRead::fillDataModel(int id, int dmRow)    // id for reader[id]
- update dmRowRead
- get next dmRow to read metadata
- relaunch reader[id](nextDmRow)

MetaReader::read(int dmRow)
- readMetadata(fPath) into a ImageMetadata structure m
- emit a signal to pass m to dm->addMetadataForItem
- emit done to connect to MetaRead::fillDataModel

PROGRESS QGraphicsView
Visible   =====*******=========================
Metadata  ******************===================
Icons     ==+++++++++++++======================
Images    =====00000===========================
          0                                   n = dm->sf->rowCount()

