// iterate a list
QListWidget *list = new QListidget;
for (const auto& i : list) {
    qDebug() << i;
}


// Regular expression
QRegExp rx("^(Border|Text|Shape|Graphic)$");

if (rx.exactMatch(objectName) == true){
    // do something
}


// QString with arguments
statusBar()->showMessage(tr("Position: (%1,%2) in top level").arg(row).arg(column));
QString newTemplate = QString("New Template %1").arg(newTemplateCount);


// Algorithm to walk a tree structure
void DataModel::walkTree(const QModelIndex &row)
{
    if (this->hasChildren()) {
        for (int i = 0; i < rowCount(row); ++i){
            walkTree(this->index(i,0,row));
        }
    }
}

// Another walk tree
void forEach(QAbstractItemModel* model, QModelIndex parent = QModelIndex()) {
    for (int r = 0; r < model->rowCount(parent); ++r) {
        QModelIndex index = model->index(r, 0, parent);
        QVariant name = model->data(index);
        qDebug() << name;
        // here is your applicable code
        if( model->hasChildren(index) ) {
            forEach(model, index);
        }
    }
}

